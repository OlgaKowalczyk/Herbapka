{"ast":null,"code":"var _jsxFileName = \"/home/raniuszek/Desktop/Herbapka/Herbapka/src/ImageUpload.js\";\nimport React, { useState } from 'react';\nimport firebase from 'firebase';\nimport storage from './Firebase/firebase';\n\nconst UploadPhotos = () => {\n  const allInputs = {\n    imgUrl: ''\n  };\n  const [imageFile, setImageFile] = useState('');\n  const [imageUrl, setImageUrl] = useState(allInputs); // console.log('imageAsFile:', imageAsFile)\n\n  const handleImageAsFile = e => {\n    const image = e.target.files[0];\n    setImageAsFile(imageFile => image);\n  };\n\n  const handleFireBaseUpload = e => {\n    e.preventDefault();\n    console.log('start of upload'); // async magic goes here...\n\n    if (imageAsFile === '') {\n      console.error(`not an image, the image file is a ${typeof imageAsFile}`);\n    }\n\n    const uploadTask = storage().ref(`/images/${imageAsFile.name}`).put(imageAsFile); //initiates the firebase side uploading \n\n    uploadTask.on('state_changed', snapShot => {\n      //takes a snap shot of the process as it is happening\n      console.log('snapShot::', snapShot);\n    }, err => {\n      //catches the errors\n      console.log('imageError:', err);\n    }, () => {\n      // gets the functions from storage refences the image storage in firebase by the children\n      // gets the download url then sets the image from firebase as the value for the imgUrl key:\n      storage().ref('images').child(imageAsFile.name).getDownloadURL().then(fireBaseUrl => {\n        setImageAsUrl(prevObject => ({ ...prevObject,\n          imgUrl: fireBaseUrl\n        }));\n      });\n    });\n    console.log('imageAsUrl:', imageAsUrl);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"uploadPhotos\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleFireBaseUpload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    onChange: handleImageAsFile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, \"upload to firebase\")), /*#__PURE__*/React.createElement(\"img\", {\n    src: imageAsUrl.imgUrl,\n    alt: \"tea\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default UploadPhotos;","map":{"version":3,"sources":["/home/raniuszek/Desktop/Herbapka/Herbapka/src/ImageUpload.js"],"names":["React","useState","firebase","storage","UploadPhotos","allInputs","imgUrl","imageFile","setImageFile","imageUrl","setImageUrl","handleImageAsFile","e","image","target","files","setImageAsFile","handleFireBaseUpload","preventDefault","console","log","imageAsFile","error","uploadTask","ref","name","put","on","snapShot","err","child","getDownloadURL","then","fireBaseUrl","setImageAsUrl","prevObject","imageAsUrl"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAOC,OAAP,MAAoB,qBAApB;;AAGA,MAAMC,YAAY,GAAG,MAAM;AAEvB,QAAMC,SAAS,GAAG;AAACC,IAAAA,MAAM,EAAE;AAAT,GAAlB;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAACI,SAAD,CAAxC,CAJuB,CAMvB;;AAEA,QAAMM,iBAAiB,GAAIC,CAAD,IAAO;AAC7B,UAAMC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAAd;AACAC,IAAAA,cAAc,CAACT,SAAS,IAAKM,KAAf,CAAd;AACH,GAHD;;AAKA,QAAMI,oBAAoB,GAAGL,CAAC,IAAI;AAC9BA,IAAAA,CAAC,CAACM,cAAF;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAF8B,CAG9B;;AACA,QAAGC,WAAW,KAAK,EAAnB,EAAuB;AACnBF,MAAAA,OAAO,CAACG,KAAR,CAAe,qCAAoC,OAAOD,WAAa,EAAvE;AACH;;AACD,UAAME,UAAU,GAAGpB,OAAO,GAAGqB,GAAV,CAAe,WAAUH,WAAW,CAACI,IAAK,EAA1C,EAA6CC,GAA7C,CAAiDL,WAAjD,CAAnB,CAP8B,CAQ9B;;AACAE,IAAAA,UAAU,CAACI,EAAX,CAAc,eAAd,EACCC,QAAD,IAAc;AACV;AACAT,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BQ,QAA1B;AACH,KAJD,EAIIC,GAAD,IAAS;AACR;AACAV,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BS,GAA3B;AACH,KAPD,EAOG,MAAM;AACL;AACA;AACA1B,MAAAA,OAAO,GAAGqB,GAAV,CAAc,QAAd,EAAwBM,KAAxB,CAA8BT,WAAW,CAACI,IAA1C,EAAgDM,cAAhD,GACCC,IADD,CACMC,WAAW,IAAI;AACjBC,QAAAA,aAAa,CAACC,UAAU,KAAK,EAAC,GAAGA,UAAJ;AAAgB7B,UAAAA,MAAM,EAAE2B;AAAxB,SAAL,CAAX,CAAb;AACH,OAHD;AAIH,KAdD;AAeAd,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BgB,UAA3B;AACH,GAzBD;;AA4BA,sBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,QAAQ,EAAEnB,oBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,QAAQ,EAAEN,iBAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BALJ,CADJ,eAQI;AAAK,IAAA,GAAG,EAAEyB,UAAU,CAAC9B,MAArB;AAA6B,IAAA,GAAG,EAAC,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,CADJ;AAaH,CAtDD;;AAwDA,eAAeF,YAAf","sourcesContent":["import React, { useState } from 'react';\nimport firebase from 'firebase';\nimport storage from './Firebase/firebase';\n\n\nconst UploadPhotos = () => {\n\n    const allInputs = {imgUrl: ''};\n    const [imageFile, setImageFile] = useState('');\n    const [imageUrl, setImageUrl] = useState(allInputs);\n\n    // console.log('imageAsFile:', imageAsFile)\n    \n    const handleImageAsFile = (e) => {\n        const image = e.target.files[0];\n        setImageAsFile(imageFile => (image));\n    }\n\n    const handleFireBaseUpload = e => {\n        e.preventDefault()\n        console.log('start of upload')\n        // async magic goes here...\n        if(imageAsFile === '') {\n            console.error(`not an image, the image file is a ${typeof(imageAsFile)}`)\n        }\n        const uploadTask = storage().ref(`/images/${imageAsFile.name}`).put(imageAsFile)\n        //initiates the firebase side uploading \n        uploadTask.on('state_changed', \n        (snapShot) => {\n            //takes a snap shot of the process as it is happening\n            console.log('snapShot::', snapShot)\n        }, (err) => {\n            //catches the errors\n            console.log('imageError:', err)\n        }, () => {\n            // gets the functions from storage refences the image storage in firebase by the children\n            // gets the download url then sets the image from firebase as the value for the imgUrl key:\n            storage().ref('images').child(imageAsFile.name).getDownloadURL()\n            .then(fireBaseUrl => {\n                setImageAsUrl(prevObject => ({...prevObject, imgUrl: fireBaseUrl}))\n            })\n        })\n        console.log('imageAsUrl:', imageAsUrl);\n    }\n    \n \n    return (\n        <div className=\"uploadPhotos\">\n            <form onSubmit={handleFireBaseUpload}>\n                <input \n                    type=\"file\"\n                    onChange={handleImageAsFile}\n                />\n                <button>upload to firebase</button>\n            </form>\n            <img src={imageAsUrl.imgUrl} alt=\"tea\" />\n\n        </div>\n  );\n}\n\nexport default UploadPhotos;\n"]},"metadata":{},"sourceType":"module"}