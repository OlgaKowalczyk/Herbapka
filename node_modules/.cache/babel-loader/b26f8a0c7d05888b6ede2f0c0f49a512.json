{"ast":null,"code":"var _jsxFileName = \"/home/raniuszek/Desktop/Herbapka/Herbapka/src/TeaForm.js\";\nimport React, { Component } from 'react';\nimport { TEA_ROUTE } from './apiConstants';\nimport ImageUpload from './ImageUpload'; // import { Redirect } from 'react-router-dom';\n// import DayPicker from 'react-day-picker';\n// import 'react-day-picker/lib/style.css';\n// import 'react-datepicker/dist/react-datepicker.css';\n// import DatePicker from 'react-date-picker'\n\nimport { storage } from 'firebase';\n\nclass TeaForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: '',\n      country: '',\n      info: '',\n      brewing: '',\n      smell: '',\n      taste: '',\n      type: '',\n      comment: '',\n      date: '',\n      imageAsFile: '',\n      imageAsUrl: allInputs\n    };\n\n    this.handleImageAsFile = e => {\n      const image = e.target.files[0];\n      setImageAsFile(imageFile => image);\n    };\n\n    this.handleFireBaseUpload = e => {\n      e.preventDefault();\n      const allInputs = {\n        imgUrl: ''\n      };\n      console.log('start of upload'); // async magic goes here...\n\n      if (this.imageAsFile === '') {\n        console.error(`not an image, the image file is a ${typeof imageAsFile}`);\n      }\n\n      const uploadTask = storage().ref(`/images/${this.imageAsFile.name}`).put(this.imageAsFile); //initiates the firebase side uploading \n\n      uploadTask.on('state_changed', snapShot => {\n        //takes a snap shot of the process as it is happening\n        console.log('snapShot::', snapShot);\n      }, err => {\n        //catches the errors\n        console.log('imageError:', err);\n      }, () => {\n        // gets the functions from storage refences the image storage in firebase by the children\n        // gets the download url then sets the image from firebase as the value for the imgUrl key:\n        storage().ref('images').child(this.imageAsFile.name).getDownloadURL().then(fireBaseUrl => {\n          setImageAsUrl(prevObject => ({ ...prevObject,\n            imgUrl: fireBaseUrl\n          }));\n        });\n      });\n      console.log('imageAsUrl:', this.imageAsUrl);\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault(); // TODO validation: nazwa\n\n      fetch(TEA_ROUTE, {\n        method: \"POST\",\n        body: JSON.stringify(this.state),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(response => response.json()).then(data => {\n        console.log('TeaForm-posted:', data);\n      }).catch(error => {\n        console.log('TeaForm-post-error', error);\n      });\n      this.props.history.push(\"/teaList\");\n    };\n  }\n\n  // setRedirect = () => {\n  //     this.setState({\n  //       redirect: true\n  //     })\n  //   }\n  //   renderRedirect = () => {\n  //     if (this.state.redirect) {\n  //       return <Redirect to='/teaList' />\n  //     }\n  //   }\n  render() {\n    const {\n      name,\n      country,\n      info,\n      brewing,\n      smell,\n      taste,\n      type,\n      comment,\n      date,\n      image\n    } = this.state;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, console.log(image), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form_box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: (this.handleSubmit, this.handleFireBaseUpload),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      value: name,\n      onChange: this.handleChange,\n      placeholder: \"Nazwa:\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"select\", {\n      name: \"country\",\n      value: country,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 33\n      }\n    }, \"Kraj pochodzenia:\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Chiny\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 33\n      }\n    }, \"Chiny\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Japonia\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 33\n      }\n    }, \"Japonia\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Indie\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 33\n      }\n    }, \"Indie\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Nepal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 33\n      }\n    }, \"Nepal\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Taiwan\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 33\n      }\n    }, \"Tajwan\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Sri Lanka\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 33\n      }\n    }, \"Sri Lanka\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Korea\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 33\n      }\n    }, \"Korea\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Malawi\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 33\n      }\n    }, \"Malawi\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Kenia\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 33\n      }\n    }, \"Kenia\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Gruzja\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 33\n      }\n    }, \"Gruzja\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Inny\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 33\n      }\n    }, \"Inny\")), /*#__PURE__*/React.createElement(\"select\", {\n      type: \"text\",\n      name: \"type\",\n      value: type,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 33\n      }\n    }, \"Typ:\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"czarna\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 33\n      }\n    }, \"Czarna\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"zielona\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 33\n      }\n    }, \"Zielona\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"bia\\u0142a\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 33\n      }\n    }, \"Bia\\u0142a\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"pu-erh shu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 33\n      }\n    }, \"Shu\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"pu-erh sheng\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 33\n      }\n    }, \"Sheng\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"oolong\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 33\n      }\n    }, \"Oolong\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\\u017C\\xF3\\u0142ta\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 33\n      }\n    }, \"\\u017B\\xF3\\u0142ta\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"inna\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 33\n      }\n    }, \"Inna\")), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"date\",\n      name: \"date\",\n      value: date,\n      onChange: this.handleChange,\n      className: \"form_date\" // placeholder= {new Date};\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"textarea\", {\n      type: \"text\",\n      name: \"info\",\n      value: info,\n      onChange: this.handleChange,\n      placeholder: \"Dodatkowe informacje:\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"textarea\", {\n      type: \"text\",\n      name: \"brewing\",\n      value: brewing,\n      onChange: this.handleChange,\n      placeholder: \"Spos\\xF3b parzenia:\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"textarea\", {\n      type: \"text\",\n      name: \"smell\",\n      value: smell,\n      onChange: this.handleChange,\n      placeholder: \"Zapach:\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"textarea\", {\n      type: \"text\",\n      name: \"taste\",\n      value: taste,\n      onChange: this.handleChange,\n      placeholder: \"Smak:\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"textarea\", {\n      type: \"text\",\n      name: \"comment\",\n      value: comment,\n      onChange: this.handleChange,\n      placeholder: \"Uwagi:\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(ImageUpload, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      onChange: handleImageAsFile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 25\n      }\n    }, \"upload to firebase\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"form_btn save-btn\",\n      onClick: this.handleUpload,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 25\n      }\n    }, \"Zapisz\")))));\n  }\n\n}\n\nexport default TeaForm;","map":{"version":3,"sources":["/home/raniuszek/Desktop/Herbapka/Herbapka/src/TeaForm.js"],"names":["React","Component","TEA_ROUTE","ImageUpload","storage","TeaForm","state","name","country","info","brewing","smell","taste","type","comment","date","imageAsFile","imageAsUrl","allInputs","handleImageAsFile","e","image","target","files","setImageAsFile","imageFile","handleFireBaseUpload","preventDefault","imgUrl","console","log","error","uploadTask","ref","put","on","snapShot","err","child","getDownloadURL","then","fireBaseUrl","setImageAsUrl","prevObject","handleChange","setState","value","handleSubmit","fetch","method","body","JSON","stringify","headers","response","json","data","catch","props","history","push","render","handleUpload"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { TEA_ROUTE } from './apiConstants';\nimport ImageUpload from './ImageUpload';\n// import { Redirect } from 'react-router-dom';\n// import DayPicker from 'react-day-picker';\n// import 'react-day-picker/lib/style.css';\n// import 'react-datepicker/dist/react-datepicker.css';\n// import DatePicker from 'react-date-picker'\nimport {storage} from 'firebase';\n\nclass TeaForm extends Component {\n    \n    state = {\n        name: '',\n        country: '',\n        info: '',\n        brewing: '',\n        smell: '',\n        taste: '',\n        type: '',\n        comment: '',\n        date: '',\n        imageAsFile: '',\n        imageAsUrl: allInputs,\n    }\n\n    // console.log('imageAsFile:', this.imageAsFile)\n    \n    handleImageAsFile = (e) => {\n        const image = e.target.files[0];\n        setImageAsFile(imageFile => (image));\n    }\n\n    handleFireBaseUpload = e => {\n        e.preventDefault()\n        const allInputs = {imgUrl: ''};\n        console.log('start of upload')\n        // async magic goes here...\n        if(this.imageAsFile === '') {\n            console.error(`not an image, the image file is a ${typeof(imageAsFile)}`)\n        }\n        const uploadTask = storage().ref(`/images/${this.imageAsFile.name}`).put(this.imageAsFile)\n        //initiates the firebase side uploading \n        uploadTask.on('state_changed', \n        (snapShot) => {\n            //takes a snap shot of the process as it is happening\n            console.log('snapShot::', snapShot)\n        }, (err) => {\n            //catches the errors\n            console.log('imageError:', err)\n        }, () => {\n            // gets the functions from storage refences the image storage in firebase by the children\n            // gets the download url then sets the image from firebase as the value for the imgUrl key:\n            storage().ref('images').child(this.imageAsFile.name).getDownloadURL()\n            .then(fireBaseUrl => {\n                setImageAsUrl(prevObject => ({...prevObject, imgUrl: fireBaseUrl}))\n            })\n        })\n        console.log('imageAsUrl:', this.imageAsUrl);\n    }\n\n\n\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value,\n        })\n    }\n    \n    // addPhoto = (e) => {\n    //     if (e.target.files[0]) {\n    //         const image = e.target.files[0];\n    //         this.setState(() => ({image}));\n    //     }\n    // }\n\n    // handleUpload = () => {\n    //     const { image } = this.state;\n    //     console.log('upload!');\n    // }    \n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        // TODO validation: nazwa\n    \n        fetch(TEA_ROUTE, {\n            method: \"POST\",\n            body: JSON.stringify(this.state),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n            })\n            .then(response => response.json())\n            .then(data => {\n                console.log('TeaForm-posted:', data);\n            })\n            .catch(error => {\n                console.log('TeaForm-post-error', error);\n            })\n        this.props.history.push(\"/teaList\");\n    }\n\n    // setRedirect = () => {\n    //     this.setState({\n    //       redirect: true\n    //     })\n    //   }\n    //   renderRedirect = () => {\n    //     if (this.state.redirect) {\n    //       return <Redirect to='/teaList' />\n    //     }\n    //   }\n\n    render(){ \n     \n        const {name, country, info, brewing, smell, taste, type, comment, date, image} = this.state;\n\n        return (    \n            <>\n            {console.log(image)}\n\n            <div className='container'>\n                <div className='form_box'>\n                    <form onSubmit={this.handleSubmit, this.handleFireBaseUpload}>\n                        {/* <label>\n                            Nazwa:\n                        </label> */}\n                        <input \n                            type='text'    \n                            name='name' \n                            value={name} \n                            onChange={this.handleChange}\n                            placeholder='Nazwa:'\n                        />\n                        <select \n                            name='country' \n                            value={country} \n                            onChange={this.handleChange}>\n                                <option>Kraj pochodzenia:</option>\n                                <option value=\"Chiny\">Chiny</option>\n                                <option value=\"Japonia\">Japonia</option>\n                                <option value=\"Indie\">Indie</option>\n                                <option value=\"Nepal\">Nepal</option> \n                                <option value=\"Taiwan\">Tajwan</option> \n                                <option value=\"Sri Lanka\">Sri Lanka</option> \n                                <option value=\"Korea\">Korea</option> \n                                <option value=\"Malawi\">Malawi</option> \n                                <option value=\"Kenia\">Kenia</option>  \n                                <option value=\"Gruzja\">Gruzja</option> \n                                <option value=\"Inny\">Inny</option>           \n                        </select> \n                        <select \n                            type='text' \n                            name='type' \n                            value={type} \n                            onChange={this.handleChange}>\n                                <option>Typ:</option>\n                                <option value='czarna'>Czarna</option>\n                                <option value='zielona'>Zielona</option>\n                                <option value='biała'>Biała</option>\n                                <option value='pu-erh shu'>Shu</option>\n                                <option value='pu-erh sheng'>Sheng</option>\n                                <option value='oolong'>Oolong</option>\n                                <option value='żółta'>Żółta</option>\n                                <option value='inna'>Inna</option>\n                        </select>\n                         {/* <label>\n                            Data:\n                        </label> */} \n\n                        <input \n                            type='date'    \n                            name='date' \n                            value={date} \n                            onChange={this.handleChange}\n                            className='form_date'\n                            // placeholder= {new Date};\n                        />\n                            {/* <DatePicker\n                                name = 'date'\n                                value={date}\n                                onChange={this.handleChange}\n                            /> */} \n                        <br/>\n                        {/* <label>\n                            Kraj pochodzenia:\n                        </label> */}\n                        <br/>  \n                        {/* <label>\n                            Dodatkowe informacje:\n                        </label> */}\n                        <textarea \n                            type='text' \n                            name='info' \n                            value={info} \n                            onChange={this.handleChange}\n                            placeholder='Dodatkowe informacje:'\n                        />   \n                        <br/>  \n                        {/* <label>\n                            Sposób parzenia:\n                        </label> */}\n                        <textarea \n                            type='text' \n                            name='brewing' \n                            value={brewing} \n                            onChange={this.handleChange}\n                            placeholder='Sposób parzenia:'\n                        />\n                        <br/>\n                    \n                        {/* <label>\n                            Zapach:\n                        </label> */}\n                        <textarea \n                            type='text' \n                            name='smell' \n                            value={smell} \n                            onChange={this.handleChange} \n                            placeholder='Zapach:'\n                        />\n                        {/* <label>\n                            Smak:\n                        </label> */}\n                        <textarea \n                            type='text' \n                            name='taste' \n                            value={taste} \n                            onChange={this.handleChange}\n                            placeholder='Smak:'\n                        />\n                        {/* <label>\n                            Typ:\n                        </label> */}\n                        {/* <label>\n                            Uwagi:\n                        </label> */}\n                        <textarea \n                            type='text' \n                            name='comment' \n                            value={comment} \n                            onChange={this.handleChange}\n                            placeholder='Uwagi:'\n                        />\n                        <br/>\n                        {/* <input\n                            type='file'\n                        /> */}\n                        <ImageUpload />\n\n                        <input \n                        type=\"file\"\n                        onChange={handleImageAsFile}\n                          />\n                        <button>upload to firebase</button>\n\n\n\n\n                        <br/>\n                        <button type='submit' className='form_btn save-btn' onClick={this.handleUpload}>\n                            Zapisz\n                        </button>\n                    </form> \n                </div>\n            </div>   \n            </> \n        )\n    }\n}\nexport default TeaForm;"]},"metadata":{},"sourceType":"module"}