{"ast":null,"code":"var _jsxFileName = \"/home/raniuszek/Desktop/Herbapka/Herbapka/src/ImageUpload.js\";\nimport React from 'react'; // import firebase from './Firebase/index';\n\nimport { storage } from './Firebase';\nimport { Component } from 'react';\n\nclass ImageUpload extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      image: null,\n      url: \"\",\n      progress: 0\n    };\n\n    this.handleChange = e => {\n      if (e.target.files[0]) {\n        const image = e.target.files[0];\n        this.setState(() => ({\n          image\n        }));\n        console.log('image:', image);\n      }\n    };\n\n    this.handleUpload = () => {\n      const {\n        image\n      } = this.state;\n      const uploadTask = storage.ref(`images/${image.name}`).put(image);\n      uploadTask.on(\"state_changed\", snapshot => {\n        const progress = Math.round(snapshot.bytesTransferred / snapshot.totalBytes * 100);\n        this.setState({\n          progress\n        });\n      }, error => {\n        console.log(error);\n      }, () => {\n        storage.ref(\"images\").child(image.name).getDownloadURL().then(url => {\n          this.setState({\n            url\n          });\n        });\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      name: \"file\",\n      id: \"file\",\n      onChange: this.handleChange,\n      className: \"inputfile\",\n      multiple: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"file\",\n      className: \"addPhoto-btn form_btn label-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }, \"Dodaj zdj\\u0119cie\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleUpload,\n      className: \"addPhoto-btn form_btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 15\n      }\n    }, \"Zapisz zdj\\u0119cie\")), /*#__PURE__*/React.createElement(\"img\", {\n      src: this.state.url,\n      alt: \"Uploaded Images\",\n      height: \"15\",\n      width: \"20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n\nexport default ImageUpload; // const UploadPhotos = () => {\n//     const allInputs = {imgUrl: ''};\n//     const [imageFile, setImageFile] = useState('');\n//     const [imageUrl, setImageUrl] = useState(allInputs);\n//     // console.log('imageFile:', imageFile)\n//     const handleImageFile = (e) => {\n//         const image = e.target.files[0];\n//         setImageFile(imageFile => (image));\n//     }\n//     const handleFireBaseUpload = e => {\n//         e.preventDefault()\n//         console.log('start of upload')\n//         // async magic goes here...\n//         if(imageFile === '') {\n//             console.error(`not an image, the image file is a ${typeof(imageFile)}`)\n//         }\n//         const uploadTask = storage().ref(`/images/${imageFile.name}`).put(imageFile)\n//         //initiates the firebase side uploading \n//         uploadTask.on('state_changed', \n//         (snapShot) => {\n//             //takes a snap shot of the process as it is happening\n//             console.log('snapShot::', snapShot)\n//         }, (err) => {\n//             //catches the errors\n//             console.log('imageError:', err)\n//         }, () => {\n//             // gets the functions from storage refences the image storage in firebase by the children\n//             // gets the download url then sets the image from firebase as the value for the imgUrl key:\n//             storage().ref('images').child(imageFile.name).getDownloadURL()\n//             .then(fireBaseUrl => {\n//                 setImageUrl(prevObject => ({...prevObject, imgUrl: fireBaseUrl}))\n//             })\n//         })\n//         console.log('imageUrl:', imageUrl);\n//     }\n//     return (\n//         <div className=\"uploadPhotos\">\n//             <form onSubmit={handleFireBaseUpload}>\n//                 <input \n//                     type=\"file\"\n//                     onChange={handleImageFile}\n//                 />\n//                 <button>upload to firebase</button>\n//             </form>\n//             <img src={imageUrl.imgUrl} alt=\"tea\" />\n//         </div>\n//   );\n// }\n// export default UploadPhotos;","map":{"version":3,"sources":["/home/raniuszek/Desktop/Herbapka/Herbapka/src/ImageUpload.js"],"names":["React","storage","Component","ImageUpload","state","image","url","progress","handleChange","e","target","files","setState","console","log","handleUpload","uploadTask","ref","name","put","on","snapshot","Math","round","bytesTransferred","totalBytes","error","child","getDownloadURL","then","render"],"mappings":"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","sourcesContent":["import React from 'react';\n// import firebase from './Firebase/index';\nimport { storage } from './Firebase';\n\nimport { Component } from 'react';\n\nclass ImageUpload extends Component {\n  \n    state = {\n        image: null,\n        url: \"\",\n        progress: 0\n    };\n\n  \n    handleChange = e => {\n      if (e.target.files[0]) {\n        const image = e.target.files[0];\n        this.setState(() => ({ image }));\n        console.log('image:', image)\n      }\n    };\n  \n    handleUpload = () => {\n      const { image } = this.state;\n      const uploadTask = storage.ref(`images/${image.name}`).put(image);\n      uploadTask.on(\n        \"state_changed\",\n        snapshot => {\n          const progress = Math.round(\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n          );\n          this.setState({ progress });\n        },\n        error => {\n          console.log(error);\n        },\n        () => {\n          storage\n            .ref(\"images\")\n            .child(image.name)\n            .getDownloadURL()\n            .then(url => {\n              this.setState({ url });\n            });\n        }\n      );\n    };\n    render() {\n      return (\n        <>\n          <div className=\"\">\n          <input \n              type='file' \n              name='file' \n              id='file'\n              onChange={this.handleChange}\n              className='inputfile' \n              multiple/>\n          <label for='file' className='addPhoto-btn form_btn label-btn'>\n              Dodaj zdjęcie\n          </label>\n              <button\n                onClick={this.handleUpload}\n                className='addPhoto-btn form_btn'\n              >\n                Zapisz zdjęcie\n              </button> \n          </div>  \n          <img\n            src={this.state.url}\n            alt=\"Uploaded Images\"\n            height=\"15\"\n            width=\"20\"\n          />\n        </>\n      );\n    }\n  }\n  \n  export default ImageUpload;\n\n\n// const UploadPhotos = () => {\n\n//     const allInputs = {imgUrl: ''};\n//     const [imageFile, setImageFile] = useState('');\n//     const [imageUrl, setImageUrl] = useState(allInputs);\n\n//     // console.log('imageFile:', imageFile)\n    \n//     const handleImageFile = (e) => {\n//         const image = e.target.files[0];\n//         setImageFile(imageFile => (image));\n//     }\n\n//     const handleFireBaseUpload = e => {\n//         e.preventDefault()\n//         console.log('start of upload')\n//         // async magic goes here...\n//         if(imageFile === '') {\n//             console.error(`not an image, the image file is a ${typeof(imageFile)}`)\n//         }\n//         const uploadTask = storage().ref(`/images/${imageFile.name}`).put(imageFile)\n//         //initiates the firebase side uploading \n//         uploadTask.on('state_changed', \n//         (snapShot) => {\n//             //takes a snap shot of the process as it is happening\n//             console.log('snapShot::', snapShot)\n//         }, (err) => {\n//             //catches the errors\n//             console.log('imageError:', err)\n//         }, () => {\n//             // gets the functions from storage refences the image storage in firebase by the children\n//             // gets the download url then sets the image from firebase as the value for the imgUrl key:\n//             storage().ref('images').child(imageFile.name).getDownloadURL()\n//             .then(fireBaseUrl => {\n//                 setImageUrl(prevObject => ({...prevObject, imgUrl: fireBaseUrl}))\n//             })\n//         })\n//         console.log('imageUrl:', imageUrl);\n//     }\n    \n \n//     return (\n//         <div className=\"uploadPhotos\">\n//             <form onSubmit={handleFireBaseUpload}>\n//                 <input \n//                     type=\"file\"\n//                     onChange={handleImageFile}\n//                 />\n//                 <button>upload to firebase</button>\n//             </form>\n//             <img src={imageUrl.imgUrl} alt=\"tea\" />\n\n//         </div>\n//   );\n// }\n\n// export default UploadPhotos;\n"]},"metadata":{},"sourceType":"module"}