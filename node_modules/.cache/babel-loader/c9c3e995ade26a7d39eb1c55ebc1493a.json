{"ast":null,"code":"var _jsxFileName = \"/home/raniuszek/Desktop/Herbapka/Herbapka/src/ImageUpload.js\";\nimport React, { useState } from 'react';\nimport firebase from './Firebase/firebase';\nimport { storage } from './Firebase/firebase';\nimport { Component } from 'react';\n\nclass ImageUpload extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      if (e.target.files[0]) {\n        const image = e.target.files[0];\n        this.setState(() => ({\n          image\n        }));\n      }\n    };\n\n    this.handleUpload = () => {\n      const {\n        image\n      } = this.state;\n      const uploadTask = storage.ref(`images/${image.name}`).put(image);\n      uploadTask.on(\"state_changed\", snapshot => {\n        // progress function ...\n        const progress = Math.round(snapshot.bytesTransferred / snapshot.totalBytes * 100);\n        this.setState({\n          progress\n        });\n      }, error => {\n        // Error function ...\n        console.log(error);\n      }, () => {\n        // complete function ...\n        storage.ref(\"images\").child(image.name).getDownloadURL().then(url => {\n          this.setState({\n            url\n          });\n        });\n      });\n    };\n\n    this.state = {\n      image: null,\n      url: \"\",\n      progress: 0\n    };\n  }\n\n  render() {\n    console.log(storage);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"green-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, \"React Firebase Image Uploader\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"progress\", {\n      value: this.state.progress,\n      max: \"100\",\n      className: \"progress\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"file-field input-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 15\n      }\n    }, \"File\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"file-path-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"file-path validate\",\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleUpload,\n      className: \"waves-effect waves-light btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }, \"Upload\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      src: this.state.url || \"https://via.placeholder.com/400x300\",\n      alt: \"Uploaded Images\",\n      height: \"300\",\n      width: \"400\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n\nexport default ImageUpload; // const UploadPhotos = () => {\n//     const allInputs = {imgUrl: ''};\n//     const [imageFile, setImageFile] = useState('');\n//     const [imageUrl, setImageUrl] = useState(allInputs);\n//     // console.log('imageFile:', imageFile)\n//     const handleImageFile = (e) => {\n//         const image = e.target.files[0];\n//         setImageFile(imageFile => (image));\n//     }\n//     const handleFireBaseUpload = e => {\n//         e.preventDefault()\n//         console.log('start of upload')\n//         // async magic goes here...\n//         if(imageFile === '') {\n//             console.error(`not an image, the image file is a ${typeof(imageFile)}`)\n//         }\n//         const uploadTask = storage().ref(`/images/${imageFile.name}`).put(imageFile)\n//         //initiates the firebase side uploading \n//         uploadTask.on('state_changed', \n//         (snapShot) => {\n//             //takes a snap shot of the process as it is happening\n//             console.log('snapShot::', snapShot)\n//         }, (err) => {\n//             //catches the errors\n//             console.log('imageError:', err)\n//         }, () => {\n//             // gets the functions from storage refences the image storage in firebase by the children\n//             // gets the download url then sets the image from firebase as the value for the imgUrl key:\n//             storage().ref('images').child(imageFile.name).getDownloadURL()\n//             .then(fireBaseUrl => {\n//                 setImageUrl(prevObject => ({...prevObject, imgUrl: fireBaseUrl}))\n//             })\n//         })\n//         console.log('imageUrl:', imageUrl);\n//     }\n//     return (\n//         <div className=\"uploadPhotos\">\n//             <form onSubmit={handleFireBaseUpload}>\n//                 <input \n//                     type=\"file\"\n//                     onChange={handleImageFile}\n//                 />\n//                 <button>upload to firebase</button>\n//             </form>\n//             <img src={imageUrl.imgUrl} alt=\"tea\" />\n//         </div>\n//   );\n// }\n// export default UploadPhotos;","map":{"version":3,"sources":["/home/raniuszek/Desktop/Herbapka/Herbapka/src/ImageUpload.js"],"names":["React","useState","firebase","storage","Component","ImageUpload","constructor","props","handleChange","e","target","files","image","setState","handleUpload","state","uploadTask","ref","name","put","on","snapshot","progress","Math","round","bytesTransferred","totalBytes","error","console","log","child","getDownloadURL","then","url","render"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport firebase from './Firebase/firebase';\nimport { storage } from './Firebase/firebase';\n\nimport { Component } from 'react';\n\nclass ImageUpload extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        image: null,\n        url: \"\",\n        progress: 0\n      };\n    }\n  \n    handleChange = e => {\n      if (e.target.files[0]) {\n        const image = e.target.files[0];\n        this.setState(() => ({ image }));\n      }\n    };\n  \n    handleUpload = () => {\n      const { image } = this.state;\n      const uploadTask = storage.ref(`images/${image.name}`).put(image);\n      uploadTask.on(\n        \"state_changed\",\n        snapshot => {\n          // progress function ...\n          const progress = Math.round(\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n          );\n          this.setState({ progress });\n        },\n        error => {\n          // Error function ...\n          console.log(error);\n        },\n        () => {\n          // complete function ...\n          storage\n            .ref(\"images\")\n            .child(image.name)\n            .getDownloadURL()\n            .then(url => {\n              this.setState({ url });\n            });\n        }\n      );\n    };\n    render() {\n        console.log(storage)\n      return (\n        <div className=\"center\">\n            <br/>\n            <h2 className=\"green-text\">React Firebase Image Uploader</h2>\n            <br/>\n            <br/>\n          <div className=\"row\">\n            <progress value={this.state.progress} max=\"100\" className=\"progress\" />\n          </div>\n          <br />\n          <br />\n          <br />\n          <div className=\"file-field input-field\">\n            <div className=\"btn\">\n              <span>File</span>\n              <input type=\"file\" onChange={this.handleChange} />\n            </div>\n            <div className=\"file-path-wrapper\">\n              <input className=\"file-path validate\" type=\"text\" />\n            </div>\n          </div>\n          <button\n            onClick={this.handleUpload}\n            className=\"waves-effect waves-light btn\"\n          >\n            Upload\n          </button>\n          <br />\n          <br />\n          <img\n            src={this.state.url || \"https://via.placeholder.com/400x300\"}\n            alt=\"Uploaded Images\"\n            height=\"300\"\n            width=\"400\"\n          />\n        </div>\n      );\n    }\n  }\n  \n  export default ImageUpload;\n// const UploadPhotos = () => {\n\n//     const allInputs = {imgUrl: ''};\n//     const [imageFile, setImageFile] = useState('');\n//     const [imageUrl, setImageUrl] = useState(allInputs);\n\n//     // console.log('imageFile:', imageFile)\n    \n//     const handleImageFile = (e) => {\n//         const image = e.target.files[0];\n//         setImageFile(imageFile => (image));\n//     }\n\n//     const handleFireBaseUpload = e => {\n//         e.preventDefault()\n//         console.log('start of upload')\n//         // async magic goes here...\n//         if(imageFile === '') {\n//             console.error(`not an image, the image file is a ${typeof(imageFile)}`)\n//         }\n//         const uploadTask = storage().ref(`/images/${imageFile.name}`).put(imageFile)\n//         //initiates the firebase side uploading \n//         uploadTask.on('state_changed', \n//         (snapShot) => {\n//             //takes a snap shot of the process as it is happening\n//             console.log('snapShot::', snapShot)\n//         }, (err) => {\n//             //catches the errors\n//             console.log('imageError:', err)\n//         }, () => {\n//             // gets the functions from storage refences the image storage in firebase by the children\n//             // gets the download url then sets the image from firebase as the value for the imgUrl key:\n//             storage().ref('images').child(imageFile.name).getDownloadURL()\n//             .then(fireBaseUrl => {\n//                 setImageUrl(prevObject => ({...prevObject, imgUrl: fireBaseUrl}))\n//             })\n//         })\n//         console.log('imageUrl:', imageUrl);\n//     }\n    \n \n//     return (\n//         <div className=\"uploadPhotos\">\n//             <form onSubmit={handleFireBaseUpload}>\n//                 <input \n//                     type=\"file\"\n//                     onChange={handleImageFile}\n//                 />\n//                 <button>upload to firebase</button>\n//             </form>\n//             <img src={imageUrl.imgUrl} alt=\"tea\" />\n\n//         </div>\n//   );\n// }\n\n// export default UploadPhotos;\n"]},"metadata":{},"sourceType":"module"}