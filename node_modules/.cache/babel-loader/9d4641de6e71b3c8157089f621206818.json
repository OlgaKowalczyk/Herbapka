{"ast":null,"code":"var _jsxFileName = \"/home/raniuszek/Desktop/Herbapka/Herbapka/src/TeaForm.js\";\nimport React, { Component } from 'react';\nimport { TEA_ROUTE, COUNTRY_ROUTE } from './apiConstants'; // import Select from 'react-select';\n// import DayPicker from 'react-day-picker';\n// import 'react-day-picker/lib/style.css';\n\nclass TeaForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: '',\n      country: [],\n      info: '',\n      brewing: '',\n      smell: '',\n      taste: '',\n      aroma: '',\n      comment: '',\n      // date: '',\n      selectedOption: null\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value // date: new Date().getDate\n\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      console.log('state:', this.state); // validation: chociaÅ¼ nazwa\n\n      fetch(TEA_ROUTE, {\n        method: \"POST\",\n        body: JSON.stringify(this.state),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(response => response.json()).then(data => {\n        console.log('data: ', data);\n      }).catch(error => {\n        console.log('error', error);\n      });\n    };\n  }\n\n  componentDidMount() {\n    fetch(COUNTRY_ROUTE).then(response => response.json()).then(data => {\n      this.setState({\n        country: data\n      });\n      console.log.apply('country:', this.state.country);\n    });\n  }\n\n  render() {\n    const {\n      name,\n      country,\n      info,\n      brewing,\n      smell,\n      taste,\n      aroma,\n      comment\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }, \"Nazwa:\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      value: name,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, \"Kraj pochodzenia:\"), /*#__PURE__*/React.createElement(\"select\", {\n      name: \"country\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }, \"// pr\\xF3bowa\\u0142am \\u015Bci\\u0105gn\\u0105\\u0107 list\\u0119 kraj\\xF3w z db.json ale cuntry.map is not a function\"), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }, \"Dodatkowe informacje:\"), /*#__PURE__*/React.createElement(\"textarea\", {\n      type: \"text\",\n      name: \"info\",\n      value: info,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }, \"Spos\\xF3b parzenia:\"), /*#__PURE__*/React.createElement(\"textarea\", {\n      type: \"text\",\n      name: \"brewing\",\n      value: brewing,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }, \"Zapach:\"), /*#__PURE__*/React.createElement(\"textarea\", {\n      type: \"text\",\n      name: \"smell\",\n      value: smell,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }, \"Smak:\"), /*#__PURE__*/React.createElement(\"textarea\", {\n      type: \"text\",\n      name: \"taste\",\n      value: taste,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }, \"Aromat:\"), /*#__PURE__*/React.createElement(\"textarea\", {\n      type: \"text\",\n      name: \"aroma\",\n      value: aroma,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }, \"Dodaj zdj\\u0119cie\"), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }, \"Uwagi:\"), /*#__PURE__*/React.createElement(\"textarea\", {\n      type: \"text\",\n      name: \"comment\",\n      value: comment,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    }, \"Zapisz\"));\n  }\n\n}\n\nexport default TeaForm; // const newTea = {\n//         name: '',\n//         comment: '',\n//         };\n// const TeaForm = (props) => {\n//     const [state, setState] = useState(newTea);\n//     const handleChange = key => (e) => {\n//         setState(prevState => {\n//             return {\n//                 ...prevState,\n//                 [key]: e.target.value,\n//             }\n//         })\n//         fetch(TEA_ROUTE, {\n//             method: \"POST\",\n//             body: JSON.stringify(newTea),\n//             headers: {\n//                 \"Content-Type\": \"application/json\"\n//             }\n//             })\n//             .then(response => response.json())\n//             .then(data => {\n//                 console.log('data: ', data);\n//             })\n//             .catch(error => {\n//                 console.log('error', error);\n//             });\n//     }\n//     return (    \n//             <form onSubmit={handleSubmit}>\n//                 <label>Nazwa:</label>\n//                 <input type='text' name='name' value='' onChange={handleChange('name')}></input>\n//                 <label>Uwagi:</label>\n//                 <textarea type='text' name='comment' value='' onChange={handleChange('comment')}/>\n//                 <button type='submit'>Zapisz</button>\n//             </form> \n//     )\n// }","map":{"version":3,"sources":["/home/raniuszek/Desktop/Herbapka/Herbapka/src/TeaForm.js"],"names":["React","Component","TEA_ROUTE","COUNTRY_ROUTE","TeaForm","state","name","country","info","brewing","smell","taste","aroma","comment","selectedOption","handleChange","e","setState","target","value","handleSubmit","preventDefault","console","log","fetch","method","body","JSON","stringify","headers","then","response","json","data","catch","error","componentDidMount","apply","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { TEA_ROUTE, COUNTRY_ROUTE } from './apiConstants';\n// import Select from 'react-select';\n// import DayPicker from 'react-day-picker';\n// import 'react-day-picker/lib/style.css';\n\n\nclass TeaForm extends Component {\n    \n    state = {\n        name: '',\n        country: [],\n        info: '',\n        brewing: '',\n        smell: '',\n        taste: '',\n        aroma: '',\n        comment: '',\n        // date: '',\n        selectedOption: null,\n    }\n\n    componentDidMount(){\n        fetch(COUNTRY_ROUTE)\n        .then(response => response.json())\n        .then(data => {\n            this.setState({country: data})\n            console.log.apply('country:', this.state.country)\n        });\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value,\n            // date: new Date().getDate\n        })\n    }\n    \n    handleSubmit = (e) => {\n        e.preventDefault();\n        console.log('state:', this.state);\n        // validation: chociaÅ¼ nazwa\n    \n        fetch(TEA_ROUTE, {\n            method: \"POST\",\n            body: JSON.stringify(this.state),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n            })\n            .then(response => response.json())\n            .then(data => {\n                console.log('data: ', data);\n            })\n            .catch(error => {\n                console.log('error', error);\n            });\n    }\n    render(){ \n     \n        const {name, country, info, brewing, smell, taste, aroma, comment} = this.state;\n\n        return (    \n\n            <form onSubmit={this.handleSubmit}>\n                <label>Nazwa:</label>\n                <input type='text' name='name' value={name} onChange={this.handleChange}></input>\n                <label>Kraj pochodzenia:</label>\n                <select name='country' onChange={this.handleChange}>\n\n            \n            // prÃ³bowaÅam ÅciÄgnÄÄ listÄ krajÃ³w z db.json ale cuntry.map is not a function\n                    {/* {country.map(country => {\n                        return( \n                        <option key={country.id} value={country.name}>{country.name}</option>\n                        )\n                    })} */}\n                </select>      \n           \n                <label>Dodatkowe informacje:</label>\n                <textarea type='text' name='info' value={info} onChange={this.handleChange}/>\n                <label>SposÃ³b parzenia:</label>\n                <textarea type='text' name='brewing' value={brewing} onChange={this.handleChange}/>\n                <label>Zapach:</label>\n                <textarea type='text' name='smell' value={smell} onChange={this.handleChange}/>\n                <label>Smak:</label>\n                <textarea type='text' name='taste' value={taste} onChange={this.handleChange}/>\n                <label>Aromat:</label>\n                <textarea type='text' name='aroma' value={aroma} onChange={this.handleChange}/>\n                <button>Dodaj zdjÄcie</button>\n                <label>Uwagi:</label>\n                <textarea type='text' name='comment' value={comment} onChange={this.handleChange}/>\n                {/* <Date /> */}\n                <button type='submit'>Zapisz</button>\n            </form> \n        )\n    }\n}\nexport default TeaForm;\n\n\n\n\n\n\n\n\n\n// const newTea = {\n//         name: '',\n//         comment: '',\n//         };\n\n// const TeaForm = (props) => {\n\n//     const [state, setState] = useState(newTea);\n\n//     const handleChange = key => (e) => {\n//         setState(prevState => {\n//             return {\n//                 ...prevState,\n//                 [key]: e.target.value,\n//             }\n//         })\n//         fetch(TEA_ROUTE, {\n//             method: \"POST\",\n//             body: JSON.stringify(newTea),\n//             headers: {\n//                 \"Content-Type\": \"application/json\"\n//             }\n//             })\n//             .then(response => response.json())\n//             .then(data => {\n//                 console.log('data: ', data);\n//             })\n//             .catch(error => {\n//                 console.log('error', error);\n//             });\n//     }\n//     return (    \n//             <form onSubmit={handleSubmit}>\n//                 <label>Nazwa:</label>\n//                 <input type='text' name='name' value='' onChange={handleChange('name')}></input>\n//                 <label>Uwagi:</label>\n//                 <textarea type='text' name='comment' value='' onChange={handleChange('comment')}/>\n//                 <button type='submit'>Zapisz</button>\n//             </form> \n//     )\n// }"]},"metadata":{},"sourceType":"module"}